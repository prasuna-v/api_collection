{
	"info": {
		"_postman_id": "6d37590e-546e-4d7e-8235-a4d79f305cfa",
		"name": "SCP_STO_V2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SessionOpen",
			"item": [
				{
					"name": "SessionOpen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.clearGlobalVariables();",
									"var data = JSON.parse(responseBody);",
									"if (data.oauthToken) {",
									"    postman.setEnvironmentVariable(\"oauthToken\", data.oauthToken);",
									"}",
									"",
									"",
									"var data = JSON.parse(responseBody);",
									"if (data.clientKey) {",
									"    postman.setEnvironmentVariable(\"client_key\", data.clientKey);",
									"}",
									"",
									"var data = JSON.parse(responseBody);",
									"if (data.clientSecret) {",
									"    postman.setEnvironmentVariable(\"client_secret\", data.clientSecret);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Accept-version",
								"value": "3.1",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"usrName\": \"BRADSHRE\",\n    \"password\": \"New@1234\",\n    \"withPerm\": true,\n    \"sessOverrideKey\": null\n    }"
						},
						"url": {
							"raw": "{{url}}/ip/sec/session/open",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"sec",
								"session",
								"open"
							],
							"query": [
								{
									"key": "sessOverrideKey",
									"value": "c3e745f1-9596-4afe-b04b-44620afc56e3",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SCP",
			"item": [
				{
					"name": "TLC",
					"item": [
						{
							"name": "TLC",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/tlc/tfNum/8334565432",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"tlc",
										"tfNum",
										"8334565432"
									]
								}
							},
							"response": []
						},
						{
							"name": "TLC STO",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/tlc?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"tlc"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SSP",
					"item": [
						{
							"name": "SSP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/ssp?netWrkId=BR",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"ssp"
									],
									"query": [
										{
											"key": "netWrkId",
											"value": "BR"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "SSP STO",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/ssp?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"ssp"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "SSP LST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/ssp/lst",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"ssp",
										"lst"
									]
								}
							},
							"response": []
						},
						{
							"name": "SSP LST STO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/ssp/lst?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"ssp",
										"lst"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SPS",
					"item": [
						{
							"name": "SPS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/sps?num=8334567876",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"sps"
									],
									"query": [
										{
											"key": "num",
											"value": "8334567876"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "SPS STO",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/sps?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"sps"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "LCN",
					"item": [
						{
							"name": "LCN Disconnect",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')\r",
											"pm.globals.set(\"EffDtTm\", moment().add(8, 'days').format(\"YYYY-MM-DD\"))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"lata\":\"132\",\"netWrkId\":\"BX\",\"effDt\":\"{{EffDtTm}}\"}"
								},
								"url": {
									"raw": "{{url}}/ip/scp/lcn/disconnect",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"lcn",
										"disconnect"
									]
								}
							},
							"response": []
						},
						{
							"name": "LCN Disconnect",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/lcn/disconnect?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"lcn",
										"disconnect"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "NCA",
					"item": [
						{
							"name": "NCA reqId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/nca/netWrkId/VQ",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"nca",
										"netWrkId",
										"VQ"
									]
								}
							},
							"response": []
						},
						{
							"name": "NCA",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/nca?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"nca"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "NXX",
					"item": [
						{
							"name": "NXX ReqId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}\r",
											"\r",
											"\r",
											"// var nusJsonData = JSON.parse(responseBody);\r",
											"// console.log(nusJsonData.recVersionId);\r",
											"// if(nusJsonData.recVersionId){\r",
											"//     postman.setGlobalVariable(\"recVersionId\", nusJsonData.recVersionId);\r",
											"// }else{\r",
											"//     console.log(\"errList\");\r",
											"// }\r",
											"\r",
											"// var nusJsonData = JSON.parse(responseBody);\r",
											"// console.log(nusJsonData.effDt);\r",
											"// if(nusJsonData.effDt){\r",
											"//     postman.setGlobalVariable(\"effDt\", nusJsonData.effDt);\r",
											"// }else{\r",
											"//     console.log(\"errList\");\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/nxx/scpId/BX01/npa/833",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"nxx",
										"scpId",
										"BX01",
										"npa",
										"833"
									]
								}
							},
							"response": []
						},
						{
							"name": "NXX",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.recVersionId);\r",
											"if(nusJsonData.recVersionId){\r",
											"    postman.setGlobalVariable(\"recVersionId\", nusJsonData.recVersionId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}\r",
											"\r",
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.effDt);\r",
											"if(nusJsonData.effDt){\r",
											"    postman.setGlobalVariable(\"effDt\", nusJsonData.effDt);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/nxx?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"nxx"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "NXX COPY",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')\r",
											"pm.globals.set(\"tgtEffDt\", moment().add(7, 'days').format(\"YYYY-MM-DD\"))\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"srcEffDt\": \"{{effDt}}\",\r\n    \"tgtEffDt\": \"{{tgtEffDt}}\",\r\n    \"scpId\": \"BX01\",\r\n    \"npa\": \"833\",\r\n    \"recVersionId\": \"{{recVersionId}}\"\r\n}"
								},
								"url": {
									"raw": "{{url}}/ip/scp/nxx/copy",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"nxx",
										"copy"
									]
								}
							},
							"response": []
						},
						{
							"name": "NXX Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.recVersionId);\r",
											"if(nusJsonData.recVersionId){\r",
											"    postman.setGlobalVariable(\"recVersionId\", nusJsonData.recVersionId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/nxx/copy?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"nxx",
										"copy"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "NXX Disconnect ReqId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')\r",
											"pm.globals.set(\"disconEffDt\", moment().add(9, 'days').format(\"YYYY-MM-DD\"))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"disconEffDt\":\"{{disconEffDt}}\",\"scpId\":\"SC01\",\"npa\":\"833\"}"
								},
								"url": {
									"raw": "{{url}}/ip/scp/nxx/disconnect",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"nxx",
										"disconnect"
									]
								}
							},
							"response": []
						},
						{
							"name": "NXX Disconnect STO",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/nxx/disconnect?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"nxx",
										"disconnect"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "NRC",
					"item": [
						{
							"name": "NRC ReqId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/nrc/scpId/BX01",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"nrc",
										"scpId",
										"BX01"
									]
								}
							},
							"response": []
						},
						{
							"name": "NRC",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/nrc?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"nrc"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "NCC",
					"item": [
						{
							"name": "NRC ReqId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/ncc",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"ncc"
									]
								}
							},
							"response": []
						},
						{
							"name": "NCC STO",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/ncc?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"ncc"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "NET",
					"item": [
						{
							"name": "NRC ReqId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/net/netWrkId/BX",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"net",
										"netWrkId",
										"BX"
									]
								}
							},
							"response": []
						},
						{
							"name": "NET STO",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/net?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"net"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PRC",
					"item": [
						{
							"name": "PRC",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/prc/scpId/SP03",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"prc",
										"scpId",
										"SP03"
									]
								}
							},
							"response": []
						},
						{
							"name": "PRC STO",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/prc?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"prc"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PRC LST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var nusJsonData = JSON.parse(responseBody);\r",
											"console.log(nusJsonData.reqId);\r",
											"if(nusJsonData.reqId){\r",
											"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
											"}else{\r",
											"    console.log(\"errList\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/prc/lst",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"prc",
										"lst"
									]
								}
							},
							"response": []
						},
						{
							"name": "PRC Lst STO",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{oauthToken}}"
									},
									{
										"key": "Accept-Version",
										"type": "text",
										"value": "3.1",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/ip/scp/prc/lst?reqId={{reqId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"ip",
										"scp",
										"prc",
										"lst"
									],
									"query": [
										{
											"key": "reqId",
											"value": "{{reqId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "SessionClose",
			"item": [
				{
					"name": "Session Close",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.clearGlobalVariables();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n     \"clientKey\": \"{{client_key}}\",\n    \"clientSecret\": \"{{client_secret}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/ip/sec/session/close",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"sec",
								"session",
								"close"
							],
							"query": [
								{
									"key": "sessOverrideKey",
									"value": "c3e745f1-9596-4afe-b04b-44620afc56e3",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"setTimeout(function(){}, 500);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}