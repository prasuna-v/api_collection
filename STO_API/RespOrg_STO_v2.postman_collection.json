{
	"info": {
		"_postman_id": "7a81c77c-a684-4103-9321-069ea59d961a",
		"name": "RespOrg_STO_v2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SessionOpen",
			"item": [
				{
					"name": "SessionOpen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.clearGlobalVariables();",
									"var data = JSON.parse(responseBody);",
									"if (data.oauthToken) {",
									"    postman.setEnvironmentVariable(\"oauthToken\", data.oauthToken);",
									"}",
									"",
									"",
									"var data = JSON.parse(responseBody);",
									"if (data.clientKey) {",
									"    postman.setEnvironmentVariable(\"client_key\", data.clientKey);",
									"}",
									"",
									"var data = JSON.parse(responseBody);",
									"if (data.clientSecret) {",
									"    postman.setEnvironmentVariable(\"client_secret\", data.clientSecret);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Accept-version",
								"type": "text",
								"value": "3.1",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"usrName\": \"BRPRASAD\",\n  \"password\": \"year@456\",\n  \"sessOverrideKey\": null,\n  \"withPerm\": true\n  \n  \n   \n}"
						},
						"url": {
							"raw": "{{url}}/ip/sec/session/open",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"sec",
								"session",
								"open"
							],
							"query": [
								{
									"key": "sessOverrideKey",
									"value": "c3e745f1-9596-4afe-b04b-44620afc56e3",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Prasuna",
			"item": [
				{
					"name": "TElcodel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nusJsonData = JSON.parse(responseBody);\r",
									"console.log(nusJsonData.reqId);\r",
									"if(nusJsonData.reqId){\r",
									"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
									"}else{\r",
									"    console.log(\"errList\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n\r\n{\"telco\":\"1234\",\"recVersionId\":\"1607524894034000000\"}"
						},
						"url": {
							"raw": "{{url}}/ip/org/tco/delete",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"tco",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "TElcodel Copy",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n\r\n{\"telco\":\"1234\",\"recVersionId\":\"1607524894034000000\"}"
						},
						"url": {
							"raw": "{{url}}/ip/org/tco/delete?reqId={{reqId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"tco",
								"delete"
							],
							"query": [
								{
									"key": "reqId",
									"value": "{{reqId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ORCDel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nusJsonData = JSON.parse(responseBody);\r",
									"console.log(nusJsonData.reqId);\r",
									"if(nusJsonData.reqId){\r",
									"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
									"}else{\r",
									"    console.log(\"errList\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n\r\n{\"respOrgId\":\"1P4AH\",\"recVersionId\":\"1610015362566000000\"}"
						},
						"url": {
							"raw": "{{url}}/ip/org/orc/delete",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"orc",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "ORCdelreq",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n\r\n{\"telco\":\"1234\",\"recVersionId\":\"1607524894034000000\"}"
						},
						"url": {
							"raw": "{{url}}/ip/org/orc/delete?reqId={{reqId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"orc",
								"delete"
							],
							"query": [
								{
									"key": "reqId",
									"value": "{{reqId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/org/respOrg",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nusJsonData = JSON.parse(responseBody);\r",
									"console.log(nusJsonData.reqId);\r",
									"if(nusJsonData.reqId){\r",
									"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
									"}else{\r",
									"    console.log(\"errList\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"respOrgId\":\"N1SBC\",\r\n\"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip/org/resporg/ent/AT",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"resporg",
								"ent",
								"AT"
							]
						}
					},
					"response": []
				},
				{
					"name": "/org/respoRg STO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"respOrgId\":\"N1SBC\",\r\n\"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip/org/resporg?reqId={{reqId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"resporg"
							],
							"query": [
								{
									"key": "reqId",
									"value": "{{reqId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/org/orc",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nusJsonData = JSON.parse(responseBody);\r",
									"console.log(nusJsonData.reqId);\r",
									"if(nusJsonData.reqId){\r",
									"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
									"}else{\r",
									"    console.log(\"errList\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"respOrgId\":\"N1SBC\",\r\n\"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip/org/orc/BRSAC",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"orc",
								"BRSAC"
							]
						}
					},
					"response": []
				},
				{
					"name": "/org/orc STO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"respOrgId\":\"N1SBC\",\r\n\"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip/org/orc?reqId={{reqId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"orc"
							],
							"query": [
								{
									"key": "reqId",
									"value": "{{reqId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delresporgunt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nusJsonData = JSON.parse(responseBody);\r",
									"console.log(nusJsonData.reqId);\r",
									"if(nusJsonData.reqId){\r",
									"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
									"}else{\r",
									"    console.log(\"errList\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"respOrgId\":\"N1SBC\",\r\n\"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip/org/resporg/delrespOrgUnit",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"resporg",
								"delrespOrgUnit"
							]
						}
					},
					"response": []
				},
				{
					"name": "DelRespOrgReqId",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"respOrgId\":\"N1SBC\",\r\n\"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip/org/resporg/delrespOrgUnit?reqId={{reqId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"resporg",
								"delrespOrgUnit"
							],
							"query": [
								{
									"key": "reqId",
									"value": "{{reqId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DelresporgEnt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nusJsonData = JSON.parse(responseBody);\r",
									"console.log(nusJsonData.reqId);\r",
									"if(nusJsonData.reqId){\r",
									"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
									"}else{\r",
									"    console.log(\"errList\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"respOrgEntity\":\"TL\",\r\n\"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip/org/resporg/delrespOrgEntity",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"resporg",
								"delrespOrgEntity"
							]
						}
					},
					"response": []
				},
				{
					"name": "DelRespOrgEnt STO",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"respOrgId\":\"N1SBC\",\r\n\"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip/org/resporg/delrespOrgEntity?reqId={{reqId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"resporg",
								"delrespOrgEntity"
							],
							"query": [
								{
									"key": "reqId",
									"value": "{{reqId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "resporgdisconnect",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nusJsonData = JSON.parse(responseBody);\r",
									"console.log(nusJsonData.reqId);\r",
									"if(nusJsonData.reqId){\r",
									"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
									"}else{\r",
									"    console.log(\"errList\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"respOrgId\":\"N1SBC\",\r\n\"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip/org/resporg/disconnect",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"resporg",
								"disconnect"
							]
						}
					},
					"response": []
				},
				{
					"name": "respOrgDisconnect STO",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/ip/org/resporg/disconnect?reqId={{reqId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"resporg",
								"disconnect"
							],
							"query": [
								{
									"key": "reqId",
									"value": "{{reqId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/org/tco/BRSA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nusJsonData = JSON.parse(responseBody);\r",
									"console.log(nusJsonData.reqId);\r",
									"if(nusJsonData.reqId){\r",
									"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
									"}else{\r",
									"    console.log(\"errList\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"respOrgId\":\"N1SBC\",\r\n\"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip/org/tco/BRSA",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"tco",
								"BRSA"
							]
						}
					},
					"response": []
				},
				{
					"name": "/org/tco sto",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/ip/org/tco?reqId={{reqId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"tco"
							],
							"query": [
								{
									"key": "reqId",
									"value": "{{reqId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/org/orc/disconnect",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nusJsonData = JSON.parse(responseBody);\r",
									"console.log(nusJsonData.reqId);\r",
									"if(nusJsonData.reqId){\r",
									"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
									"}else{\r",
									"    console.log(\"errList\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"telco\": \"BRSA\",\r\n  \"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip/org/tco/disconnect",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"tco",
								"disconnect"
							]
						}
					},
					"response": []
				},
				{
					"name": "/org/orc/disconnect sto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nusJsonData = JSON.parse(responseBody);\r",
									"console.log(nusJsonData.reqId);\r",
									"if(nusJsonData.reqId){\r",
									"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
									"}else{\r",
									"    console.log(\"errList\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"telco\": \"BRSA\",\r\n  \"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip/org/tco/disconnect?reqId={{reqId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"org",
								"tco",
								"disconnect"
							],
							"query": [
								{
									"key": "reqId",
									"value": "{{reqId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "org/eaf/entity/BR",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nusJsonData = JSON.parse(responseBody);\r",
									"console.log(nusJsonData.reqId);\r",
									"if(nusJsonData.reqId){\r",
									"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
									"}else{\r",
									"    console.log(\"errList\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://tfnr-uat-api.tfnregistrypoc.com/v3/ip​/org/eaf/entity/AU",
							"protocol": "https",
							"host": [
								"tfnr-uat-api",
								"tfnregistrypoc",
								"com"
							],
							"path": [
								"v3",
								"ip​",
								"org",
								"eaf",
								"entity",
								"AU"
							]
						}
					},
					"response": []
				},
				{
					"name": "org/eaf/entity/BR Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var nusJsonData = JSON.parse(responseBody);\r",
									"console.log(nusJsonData.reqId);\r",
									"if(nusJsonData.reqId){\r",
									"    postman.setGlobalVariable(\"reqId\", nusJsonData.reqId);\r",
									"}else{\r",
									"    console.log(\"errList\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"telco\":\"N1SB\",\r\n\"recVersionId\": \"1607502168590000000\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/ip​/org/eaf/entity/BR",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip​",
								"org",
								"eaf",
								"entity",
								"BR"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Session Close",
			"item": [
				{
					"name": "SessionClose",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.clearGlobalVariables();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{oauthToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n     \"clientKey\": \"{{client_key}}\",\n    \"clientSecret\": \"{{client_secret}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/ip/sec/session/close",
							"host": [
								"{{url}}"
							],
							"path": [
								"ip",
								"sec",
								"session",
								"close"
							],
							"query": [
								{
									"key": "sessOverrideKey",
									"value": "c3e745f1-9596-4afe-b04b-44620afc56e3",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"setTimeout(function(){}, 500);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}